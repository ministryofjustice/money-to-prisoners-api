ARG ECR_ENDPOINT
ARG SERVICE
FROM ${ECR_ENDPOINT}/prisoner-money/money-to-prisoners:${SERVICE}

# We need to be root to move over the venv and install npm packages (annoyingly)
USER root

# avoid trashing venv
RUN cp -r --preserve=ownership /app/node_modules /node_modules
RUN cp -r --preserve=ownership /app/venv /venv
# ENV NODE_PATH=/node_modules
# Upgrade npm to avoid https://github.com/npm/npm/issues/9863
RUN npm install -g npm

# # Use glob in conjunction with Dockerfile-dev.dockerignore so that we avoid trashing venv
# COPY ./* /app/
COPY --chown=mtp:mtp . /app/
#This should already be the case but just to be sure...
WORKDIR /app
ARG LOCAL_DJANGO_SETTINGS_MODULE
ENV DJANGO_SETTINGS_MODULE=${LOCAL_DJANGO_SETTINGS_MODULE}

# # https://github.com/npm/npm/issues/13306#issuecomment-236876133
# RUN cd $(npm root -g)/npm \
  # && npm install fs-extra \
  # && sed -i -e s/graceful-fs/fs-extra/ -e s/fs.rename/fs.move/ ./lib/utils/rename.js


# The remaining build should be done as the user expected to run the service
USER mtp
# #Always activate the venv, even when exec-ing in
# These environment variables are equivilent to venv activation
# For more info: https://pythonspeed.com/articles/activate-virtualenv-dockerfile/
ENV VIRTUAL_ENV=/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
RUN python /app/run.py build
# # CMD is run after ENTRYPOINT
CMD ["python", "/app/run.py", "serve"]
# vim: ft=dockerfile
